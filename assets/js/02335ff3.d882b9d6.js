"use strict";(globalThis.webpackChunkmy_docs=globalThis.webpackChunkmy_docs||[]).push([[1215],{2368:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>d,contentTitle:()=>u,default:()=>o,frontMatter:()=>l,metadata:()=>s,toc:()=>a});const s=JSON.parse('{"id":"plugins/index","title":"Plugins","description":"ALARMiator kann durch Plugins einfach und generisch um neue Funktionen erweitert werden. ALARMiator wird mit einer Vielzahl an Plugins ausgeliefert und der Umfang steigt mit jeder Version.","source":"@site/docs/plugins/index.md","sourceDirName":"plugins","slug":"/plugins","permalink":"/test/docs/plugins","draft":false,"unlisted":false,"editUrl":"https://github.com/N0tAScooby/test/edit/main/docs/plugins/index.md","tags":[],"version":"current","frontMatter":{"title":"Plugins","slug":"/plugins"},"sidebar":"tutorialSidebar","previous":{"title":"pir-364x500-1","permalink":"/test/docs/pir-364x500-1"},"next":{"title":"Protokolle / Logviewer","permalink":"/test/docs/protokollelogviewer"}}');var t=i(4848),r=i(8453);const l={title:"Plugins",slug:"/plugins"},u="Plugins",d={},a=[{value:"eingehende Plugins",id:"eingehende-plugins",level:2},{value:"ausgehende Plugins",id:"ausgehende-plugins",level:2},{value:"Pluginmanager",id:"pluginmanager",level:2},{value:"Plugins selber entwickeln",id:"plugins-selber-entwickeln",level:2}];function g(e){const n={h1:"h1",h2:"h2",header:"header",p:"p",...(0,r.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.header,{children:(0,t.jsx)(n.h1,{id:"plugins",children:"Plugins"})}),"\n",(0,t.jsx)(n.p,{children:"ALARMiator kann durch Plugins einfach und generisch um neue Funktionen erweitert werden. ALARMiator wird mit einer Vielzahl an Plugins ausgeliefert und der Umfang steigt mit jeder Version."}),"\n",(0,t.jsx)(n.p,{children:"Plugins werden dabei in eingehende und ausgehende Plugins eingeteilt."}),"\n",(0,t.jsx)(n.h2,{id:"eingehende-plugins",children:"eingehende Plugins"}),"\n",(0,t.jsx)(n.p,{children:'Eingehendeo Plugins sind Plugins, mit denen Daten oder Informationen in den ALARMiator Server hineinkommen. Zu diesen Plugins z\xe4hlt z.B. das Plugin "Externe IP Adresse", das regelm\xe4ssig die \xf6ffentliche IP-Adresse des ALARMiator Servers ermittelt und allen anderen Plugins zur Verf\xfcgung stellt.'}),"\n",(0,t.jsx)(n.h2,{id:"ausgehende-plugins",children:"ausgehende Plugins"}),"\n",(0,t.jsx)(n.p,{children:"Ausgehende Plugins stellen die Gegenseite zu den eingehenden Plugins dar. Ausgehende Plugins stellen Daten und Informationen f\xfcr Drittsysteme zur Verf\xfcgung, geben also Informationen aus ALARMiator an andere Systeme weiter. Zu diesen Plugins z\xe4hlt z.B. das ALARMiator Mobile Plugin, das Alarmierungen an die Smartphone Apps \xfcbermittelt. Auch das MQTT-Plugin beispielsweise ist ein ausgehendes Plugin, da es Informationen an einen MQTT-Broker \xfcbermittelt."}),"\n",(0,t.jsx)(n.h2,{id:"pluginmanager",children:"Pluginmanager"}),"\n",(0,t.jsx)(n.p,{children:"Innerhalb des Admin-Modules in der Weboberfl\xe4che k\xf6nnen einzelne Plugins aktiviert / deaktiviert und auch konfiguriert werden. Plugins bieten dabei jeweils ihre eigene spezifische Konfiguration an. Ein EMail-Versand Plugin ben\xf6tigt andere Konfigurationswerte wie ein MQTT-Plugin."}),"\n",(0,t.jsx)(n.h2,{id:"plugins-selber-entwickeln",children:"Plugins selber entwickeln"}),"\n",(0,t.jsx)(n.p,{children:"Dass jedermann ein eigenes neues Plugin entwickeln kann ist im Grundkonzept vorgesehen. Hierzu lohnt sich ein Blick in die Entwicklerdokumentation. So kann ALARMiator schnell und unkompliziert an neue Alarmquellen angebunden werden, oder auch Alarmierungen an weitere bisher nicht unterst\xfctzte Systeme angebunden werden."})]})}function o(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(g,{...e})}):g(e)}},8453:(e,n,i)=>{i.d(n,{R:()=>l,x:()=>u});var s=i(6540);const t={},r=s.createContext(t);function l(e){const n=s.useContext(r);return s.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function u(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:l(e.components),s.createElement(r.Provider,{value:n},e.children)}}}]);